{"ast":null,"code":"var _jsxFileName = \"/home/technource/Documents/blogpostBoth/my_app/src/components/SignIn.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { signIn } from '../store/authSlice';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SignIn = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const authStatus = useSelector(state => state.auth.status);\n  const authError = useSelector(state => state.auth.error);\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(signIn(formData)).then(action => {\n      if (action.meta.requestStatus === 'fulfilled') {\n        navigate('/posts', {\n          replace: true\n        });\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Email\",\n        value: formData.email,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        value: formData.password,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: authStatus === 'loading',\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/signup\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 1\n    }, this), authError && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", authError]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true);\n};\n_s(SignIn, \"pJmqYSQLYYpAbqiWwrRBJ+2y26Y=\", false, function () {\n  return [useDispatch, useNavigate, useSelector, useSelector];\n});\n_c = SignIn;\nexport default SignIn;\nvar _c;\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","useNavigate","Link","signIn","jsxDEV","_jsxDEV","Fragment","_Fragment","SignIn","_s","formData","setFormData","email","password","dispatch","navigate","authStatus","state","auth","status","authError","error","handleChange","e","target","name","value","handleSubmit","preventDefault","then","action","meta","requestStatus","replace","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","required","disabled","to","_c","$RefreshReg$"],"sources":["/home/technource/Documents/blogpostBoth/my_app/src/components/SignIn.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate,Link } from 'react-router-dom';\nimport { signIn } from '../store/authSlice';\n\nconst SignIn = () => {\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n  });\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const authStatus = useSelector((state) => state.auth.status);\n  const authError = useSelector((state) => state.auth.error);\n\n  const handleChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(signIn(formData)).then((action) => {\n      if (action.meta.requestStatus === 'fulfilled') {\n            navigate('/posts', { replace: true });\n    \n      }\n    });\n  };\n\n  return (<>\n  \n  \n  \n    <form onSubmit={handleSubmit}>\n      <h2>Sign In</h2>\n      <input type=\"email\" name=\"email\" placeholder=\"Email\" value={formData.email} onChange={handleChange} required />\n      <br></br>\n      <input type=\"password\" name=\"password\" placeholder=\"Password\" value={formData.password} onChange={handleChange} required />\n      <button type=\"submit\" disabled={authStatus === 'loading'}>Sign In</button>\n    </form>\n\n\n<p>Don't have an account? <Link to=\"/signup\">Sign Up</Link></p>\n      {authError && <p>Error: {authError}</p>}\n  </>\n  );\n};\n\nexport default SignIn;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}